name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ap-northeast-1
  ECR_REPOSITORY: dummy
  IMAGE_TAG: latest
  AWS_ROLE_ARN: dummy
  AWS_ACCOUNT_ID: dummy

jobs:
  # üèó Step 1: Run Tests
  test:
    name: Run Pytest
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Run Tests
        id: pytest
        run: |
          pytest tests/ --tb=short --maxfail=5 | tee pytest-results.txt
          exit_code=${PIPESTATUS[0]}
          echo "::set-output name=exit_code::$exit_code"

      - name: Upload Pytest Results as Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: pytest-results.txt

      - name: Comment on PR with Pytest Results
        if: github.event_name == 'pull_request'
        uses: mshick/add-pr-comment@v2
        with:
          message: |
            ## üß™ Pytest Results
            ```
            $(cat pytest-results.txt)
            ```
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  # üèó Step 2: Build and Push Docker Image to ECR
  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: test  # Run only if tests pass

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Authenticate with Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Build Docker Image
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Push Docker Image to ECR
        run: |
          docker push ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG
